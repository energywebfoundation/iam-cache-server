/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from 'ethers';
import { Listener, Provider } from 'ethers/providers';
import { Arrayish, BigNumber, BigNumberish, Interface } from 'ethers/utils';
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from '.';

interface EthereumDidRegistryInterface extends Interface {
  functions: {
    owners: TypedFunctionDescription<{ encode([]: [string]): string }>;

    delegates: TypedFunctionDescription<{
      encode([, ,]: [string, Arrayish, string]): string;
    }>;

    nonce: TypedFunctionDescription<{ encode([]: [string]): string }>;

    changed: TypedFunctionDescription<{ encode([]: [string]): string }>;

    identityOwner: TypedFunctionDescription<{
      encode([identity]: [string]): string;
    }>;

    validDelegate: TypedFunctionDescription<{
      encode([identity, delegateType, delegate]: [
        string,
        Arrayish,
        string,
      ]): string;
    }>;

    changeOwner: TypedFunctionDescription<{
      encode([identity, newOwner]: [string, string]): string;
    }>;

    changeOwnerSigned: TypedFunctionDescription<{
      encode([identity, sigV, sigR, sigS, newOwner]: [
        string,
        BigNumberish,
        Arrayish,
        Arrayish,
        string,
      ]): string;
    }>;

    addDelegate: TypedFunctionDescription<{
      encode([identity, delegateType, delegate, validity]: [
        string,
        Arrayish,
        string,
        BigNumberish,
      ]): string;
    }>;

    addDelegateSigned: TypedFunctionDescription<{
      encode([identity, sigV, sigR, sigS, delegateType, delegate, validity]: [
        string,
        BigNumberish,
        Arrayish,
        Arrayish,
        Arrayish,
        string,
        BigNumberish,
      ]): string;
    }>;

    revokeDelegate: TypedFunctionDescription<{
      encode([identity, delegateType, delegate]: [
        string,
        Arrayish,
        string,
      ]): string;
    }>;

    revokeDelegateSigned: TypedFunctionDescription<{
      encode([identity, sigV, sigR, sigS, delegateType, delegate]: [
        string,
        BigNumberish,
        Arrayish,
        Arrayish,
        Arrayish,
        string,
      ]): string;
    }>;

    setAttribute: TypedFunctionDescription<{
      encode([identity, name, value, validity]: [
        string,
        Arrayish,
        Arrayish,
        BigNumberish,
      ]): string;
    }>;

    setAttributeSigned: TypedFunctionDescription<{
      encode([identity, sigV, sigR, sigS, name, value, validity]: [
        string,
        BigNumberish,
        Arrayish,
        Arrayish,
        Arrayish,
        Arrayish,
        BigNumberish,
      ]): string;
    }>;

    revokeAttribute: TypedFunctionDescription<{
      encode([identity, name, value]: [string, Arrayish, Arrayish]): string;
    }>;

    revokeAttributeSigned: TypedFunctionDescription<{
      encode([identity, sigV, sigR, sigS, name, value]: [
        string,
        BigNumberish,
        Arrayish,
        Arrayish,
        Arrayish,
        Arrayish,
      ]): string;
    }>;
  };

  events: {
    DIDOwnerChanged: TypedEventDescription<{
      encodeTopics([identity, owner, previousChange]: [
        string | null,
        null,
        null,
      ]): string[];
    }>;

    DIDDelegateChanged: TypedEventDescription<{
      encodeTopics([
        identity,
        delegateType,
        delegate,
        validTo,
        previousChange,
      ]: [string | null, null, null, null, null]): string[];
    }>;

    DIDAttributeChanged: TypedEventDescription<{
      encodeTopics([identity, name, value, validTo, previousChange]: [
        string | null,
        null,
        null,
        null,
        null,
      ]): string[];
    }>;
  };
}

export class EthereumDidRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): EthereumDidRegistry;
  attach(addressOrName: string): EthereumDidRegistry;
  deployed(): Promise<EthereumDidRegistry>;

  on(event: EventFilter | string, listener: Listener): EthereumDidRegistry;
  once(event: EventFilter | string, listener: Listener): EthereumDidRegistry;
  addListener(
    eventName: EventFilter | string,
    listener: Listener,
  ): EthereumDidRegistry;
  removeAllListeners(eventName: EventFilter | string): EthereumDidRegistry;
  removeListener(eventName: any, listener: Listener): EthereumDidRegistry;

  interface: EthereumDidRegistryInterface;

  functions: {
    owners(arg0: string, overrides?: TransactionOverrides): Promise<string>;

    'owners(address)'(
      arg0: string,
      overrides?: TransactionOverrides,
    ): Promise<string>;

    delegates(
      arg0: string,
      arg1: Arrayish,
      arg2: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'delegates(address,bytes32,address)'(
      arg0: string,
      arg1: Arrayish,
      arg2: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    nonce(arg0: string, overrides?: TransactionOverrides): Promise<BigNumber>;

    'nonce(address)'(
      arg0: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    changed(arg0: string, overrides?: TransactionOverrides): Promise<BigNumber>;

    'changed(address)'(
      arg0: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    identityOwner(
      identity: string,
      overrides?: TransactionOverrides,
    ): Promise<string>;

    'identityOwner(address)'(
      identity: string,
      overrides?: TransactionOverrides,
    ): Promise<string>;

    validDelegate(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<boolean>;

    'validDelegate(address,bytes32,address)'(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<boolean>;

    changeOwner(
      identity: string,
      newOwner: string,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'changeOwner(address,address)'(
      identity: string,
      newOwner: string,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    changeOwnerSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      newOwner: string,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'changeOwnerSigned(address,uint8,bytes32,bytes32,address)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      newOwner: string,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    addDelegate(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'addDelegate(address,bytes32,address,uint256)'(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    addDelegateSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      delegateType: Arrayish,
      delegate: string,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'addDelegateSigned(address,uint8,bytes32,bytes32,bytes32,address,uint256)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      delegateType: Arrayish,
      delegate: string,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    revokeDelegate(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'revokeDelegate(address,bytes32,address)'(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    revokeDelegateSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'revokeDelegateSigned(address,uint8,bytes32,bytes32,bytes32,address)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    setAttribute(
      identity: string,
      name: Arrayish,
      value: Arrayish,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'setAttribute(address,bytes32,bytes,uint256)'(
      identity: string,
      name: Arrayish,
      value: Arrayish,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    setAttributeSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      name: Arrayish,
      value: Arrayish,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'setAttributeSigned(address,uint8,bytes32,bytes32,bytes32,bytes,uint256)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      name: Arrayish,
      value: Arrayish,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    revokeAttribute(
      identity: string,
      name: Arrayish,
      value: Arrayish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'revokeAttribute(address,bytes32,bytes)'(
      identity: string,
      name: Arrayish,
      value: Arrayish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    revokeAttributeSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      name: Arrayish,
      value: Arrayish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;

    'revokeAttributeSigned(address,uint8,bytes32,bytes32,bytes32,bytes)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      name: Arrayish,
      value: Arrayish,
      overrides?: TransactionOverrides,
    ): Promise<ContractTransaction>;
  };

  owners(arg0: string, overrides?: TransactionOverrides): Promise<string>;

  'owners(address)'(
    arg0: string,
    overrides?: TransactionOverrides,
  ): Promise<string>;

  delegates(
    arg0: string,
    arg1: Arrayish,
    arg2: string,
    overrides?: TransactionOverrides,
  ): Promise<BigNumber>;

  'delegates(address,bytes32,address)'(
    arg0: string,
    arg1: Arrayish,
    arg2: string,
    overrides?: TransactionOverrides,
  ): Promise<BigNumber>;

  nonce(arg0: string, overrides?: TransactionOverrides): Promise<BigNumber>;

  'nonce(address)'(
    arg0: string,
    overrides?: TransactionOverrides,
  ): Promise<BigNumber>;

  changed(arg0: string, overrides?: TransactionOverrides): Promise<BigNumber>;

  'changed(address)'(
    arg0: string,
    overrides?: TransactionOverrides,
  ): Promise<BigNumber>;

  identityOwner(
    identity: string,
    overrides?: TransactionOverrides,
  ): Promise<string>;

  'identityOwner(address)'(
    identity: string,
    overrides?: TransactionOverrides,
  ): Promise<string>;

  validDelegate(
    identity: string,
    delegateType: Arrayish,
    delegate: string,
    overrides?: TransactionOverrides,
  ): Promise<boolean>;

  'validDelegate(address,bytes32,address)'(
    identity: string,
    delegateType: Arrayish,
    delegate: string,
    overrides?: TransactionOverrides,
  ): Promise<boolean>;

  changeOwner(
    identity: string,
    newOwner: string,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'changeOwner(address,address)'(
    identity: string,
    newOwner: string,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  changeOwnerSigned(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    newOwner: string,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'changeOwnerSigned(address,uint8,bytes32,bytes32,address)'(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    newOwner: string,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  addDelegate(
    identity: string,
    delegateType: Arrayish,
    delegate: string,
    validity: BigNumberish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'addDelegate(address,bytes32,address,uint256)'(
    identity: string,
    delegateType: Arrayish,
    delegate: string,
    validity: BigNumberish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  addDelegateSigned(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    delegateType: Arrayish,
    delegate: string,
    validity: BigNumberish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'addDelegateSigned(address,uint8,bytes32,bytes32,bytes32,address,uint256)'(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    delegateType: Arrayish,
    delegate: string,
    validity: BigNumberish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  revokeDelegate(
    identity: string,
    delegateType: Arrayish,
    delegate: string,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'revokeDelegate(address,bytes32,address)'(
    identity: string,
    delegateType: Arrayish,
    delegate: string,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  revokeDelegateSigned(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    delegateType: Arrayish,
    delegate: string,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'revokeDelegateSigned(address,uint8,bytes32,bytes32,bytes32,address)'(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    delegateType: Arrayish,
    delegate: string,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  setAttribute(
    identity: string,
    name: Arrayish,
    value: Arrayish,
    validity: BigNumberish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'setAttribute(address,bytes32,bytes,uint256)'(
    identity: string,
    name: Arrayish,
    value: Arrayish,
    validity: BigNumberish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  setAttributeSigned(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    name: Arrayish,
    value: Arrayish,
    validity: BigNumberish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'setAttributeSigned(address,uint8,bytes32,bytes32,bytes32,bytes,uint256)'(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    name: Arrayish,
    value: Arrayish,
    validity: BigNumberish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  revokeAttribute(
    identity: string,
    name: Arrayish,
    value: Arrayish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'revokeAttribute(address,bytes32,bytes)'(
    identity: string,
    name: Arrayish,
    value: Arrayish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  revokeAttributeSigned(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    name: Arrayish,
    value: Arrayish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  'revokeAttributeSigned(address,uint8,bytes32,bytes32,bytes32,bytes)'(
    identity: string,
    sigV: BigNumberish,
    sigR: Arrayish,
    sigS: Arrayish,
    name: Arrayish,
    value: Arrayish,
    overrides?: TransactionOverrides,
  ): Promise<ContractTransaction>;

  filters: {
    DIDOwnerChanged(
      identity: string | null,
      owner: null,
      previousChange: null,
    ): EventFilter;

    DIDDelegateChanged(
      identity: string | null,
      delegateType: null,
      delegate: null,
      validTo: null,
      previousChange: null,
    ): EventFilter;

    DIDAttributeChanged(
      identity: string | null,
      name: null,
      value: null,
      validTo: null,
      previousChange: null,
    ): EventFilter;
  };

  estimate: {
    owners(arg0: string, overrides?: TransactionOverrides): Promise<BigNumber>;

    'owners(address)'(
      arg0: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    delegates(
      arg0: string,
      arg1: Arrayish,
      arg2: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'delegates(address,bytes32,address)'(
      arg0: string,
      arg1: Arrayish,
      arg2: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    nonce(arg0: string, overrides?: TransactionOverrides): Promise<BigNumber>;

    'nonce(address)'(
      arg0: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    changed(arg0: string, overrides?: TransactionOverrides): Promise<BigNumber>;

    'changed(address)'(
      arg0: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    identityOwner(
      identity: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'identityOwner(address)'(
      identity: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    validDelegate(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'validDelegate(address,bytes32,address)'(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    changeOwner(
      identity: string,
      newOwner: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'changeOwner(address,address)'(
      identity: string,
      newOwner: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    changeOwnerSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      newOwner: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'changeOwnerSigned(address,uint8,bytes32,bytes32,address)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      newOwner: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    addDelegate(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'addDelegate(address,bytes32,address,uint256)'(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    addDelegateSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      delegateType: Arrayish,
      delegate: string,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'addDelegateSigned(address,uint8,bytes32,bytes32,bytes32,address,uint256)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      delegateType: Arrayish,
      delegate: string,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    revokeDelegate(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'revokeDelegate(address,bytes32,address)'(
      identity: string,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    revokeDelegateSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'revokeDelegateSigned(address,uint8,bytes32,bytes32,bytes32,address)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      delegateType: Arrayish,
      delegate: string,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    setAttribute(
      identity: string,
      name: Arrayish,
      value: Arrayish,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'setAttribute(address,bytes32,bytes,uint256)'(
      identity: string,
      name: Arrayish,
      value: Arrayish,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    setAttributeSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      name: Arrayish,
      value: Arrayish,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'setAttributeSigned(address,uint8,bytes32,bytes32,bytes32,bytes,uint256)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      name: Arrayish,
      value: Arrayish,
      validity: BigNumberish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    revokeAttribute(
      identity: string,
      name: Arrayish,
      value: Arrayish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'revokeAttribute(address,bytes32,bytes)'(
      identity: string,
      name: Arrayish,
      value: Arrayish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    revokeAttributeSigned(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      name: Arrayish,
      value: Arrayish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;

    'revokeAttributeSigned(address,uint8,bytes32,bytes32,bytes32,bytes)'(
      identity: string,
      sigV: BigNumberish,
      sigR: Arrayish,
      sigS: Arrayish,
      name: Arrayish,
      value: Arrayish,
      overrides?: TransactionOverrides,
    ): Promise<BigNumber>;
  };
}
